// Code generated by protoc-gen-go.
// source: location.proto
// DO NOT EDIT!

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	location.proto

It has these top-level messages:
	LocRequest
	IpLocation
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

type LocRequest struct {
	Ip string `protobuf:"bytes,1,opt,name=ip" json:"ip,omitempty"`
}

func (m *LocRequest) Reset()                    { *m = LocRequest{} }
func (m *LocRequest) String() string            { return proto1.CompactTextString(m) }
func (*LocRequest) ProtoMessage()               {}
func (*LocRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type IpLocation struct {
	CountryName string  `protobuf:"bytes,1,opt,name=countryName" json:"countryName,omitempty"`
	CountryAbbr string  `protobuf:"bytes,2,opt,name=countryAbbr" json:"countryAbbr,omitempty"`
	Region      string  `protobuf:"bytes,3,opt,name=region" json:"region,omitempty"`
	City        string  `protobuf:"bytes,4,opt,name=city" json:"city,omitempty"`
	Isp         string  `protobuf:"bytes,5,opt,name=isp" json:"isp,omitempty"`
	Lat         float32 `protobuf:"fixed32,6,opt,name=lat" json:"lat,omitempty"`
	Lon         float32 `protobuf:"fixed32,7,opt,name=lon" json:"lon,omitempty"`
	Domain      string  `protobuf:"bytes,8,opt,name=domain" json:"domain,omitempty"`
	ZipCode     string  `protobuf:"bytes,9,opt,name=zipCode" json:"zipCode,omitempty"`
	TimeZone    string  `protobuf:"bytes,10,opt,name=timeZone" json:"timeZone,omitempty"`
	NetSpeed    string  `protobuf:"bytes,11,opt,name=netSpeed" json:"netSpeed,omitempty"`
	IddCode     string  `protobuf:"bytes,12,opt,name=iddCode" json:"iddCode,omitempty"`
	AreaCode    string  `protobuf:"bytes,13,opt,name=areaCode" json:"areaCode,omitempty"`
	WeatherName string  `protobuf:"bytes,14,opt,name=weatherName" json:"weatherName,omitempty"`
	WeatherCode string  `protobuf:"bytes,15,opt,name=weatherCode" json:"weatherCode,omitempty"`
	Mcc         string  `protobuf:"bytes,16,opt,name=mcc" json:"mcc,omitempty"`
	Mnc         string  `protobuf:"bytes,17,opt,name=mnc" json:"mnc,omitempty"`
	MobileBrand string  `protobuf:"bytes,18,opt,name=mobileBrand" json:"mobileBrand,omitempty"`
}

func (m *IpLocation) Reset()                    { *m = IpLocation{} }
func (m *IpLocation) String() string            { return proto1.CompactTextString(m) }
func (*IpLocation) ProtoMessage()               {}
func (*IpLocation) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func init() {
	proto1.RegisterType((*LocRequest)(nil), "proto.LocRequest")
	proto1.RegisterType((*IpLocation)(nil), "proto.IpLocation")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion3

// Client API for LocationSvr service

type LocationSvrClient interface {
	Ip2Location(ctx context.Context, in *LocRequest, opts ...grpc.CallOption) (*IpLocation, error)
}

type locationSvrClient struct {
	cc *grpc.ClientConn
}

func NewLocationSvrClient(cc *grpc.ClientConn) LocationSvrClient {
	return &locationSvrClient{cc}
}

func (c *locationSvrClient) Ip2Location(ctx context.Context, in *LocRequest, opts ...grpc.CallOption) (*IpLocation, error) {
	out := new(IpLocation)
	err := grpc.Invoke(ctx, "/proto.LocationSvr/Ip2Location", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for LocationSvr service

type LocationSvrServer interface {
	Ip2Location(context.Context, *LocRequest) (*IpLocation, error)
}

func RegisterLocationSvrServer(s *grpc.Server, srv LocationSvrServer) {
	s.RegisterService(&_LocationSvr_serviceDesc, srv)
}

func _LocationSvr_Ip2Location_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LocRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LocationSvrServer).Ip2Location(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.LocationSvr/Ip2Location",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LocationSvrServer).Ip2Location(ctx, req.(*LocRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _LocationSvr_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.LocationSvr",
	HandlerType: (*LocationSvrServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Ip2Location",
			Handler:    _LocationSvr_Ip2Location_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: fileDescriptor0,
}

func init() { proto1.RegisterFile("location.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 340 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x54, 0x92, 0xbf, 0x6e, 0x22, 0x31,
	0x10, 0xc6, 0x8f, 0xff, 0x30, 0x7b, 0xc7, 0x81, 0x8b, 0x93, 0x85, 0xae, 0x40, 0x54, 0xa9, 0x28,
	0x88, 0xf2, 0x00, 0xf9, 0xd3, 0x20, 0xa1, 0x14, 0xd0, 0xa5, 0xf3, 0x7a, 0x47, 0x89, 0x25, 0xd6,
	0x76, 0x8c, 0x49, 0x44, 0x9e, 0x35, 0x0f, 0x13, 0x7b, 0xbc, 0x0b, 0x4b, 0xb5, 0xf3, 0xfd, 0xbe,
	0xf1, 0x67, 0xed, 0x78, 0x60, 0xbc, 0x37, 0x52, 0x78, 0x65, 0xf4, 0xd2, 0x3a, 0xe3, 0x0d, 0xeb,
	0xd1, 0x67, 0xf1, 0x1f, 0x60, 0x63, 0xe4, 0x16, 0xdf, 0x8f, 0x78, 0xf0, 0x6c, 0x0c, 0x6d, 0x65,
	0x79, 0x6b, 0xde, 0xba, 0x19, 0x6d, 0x43, 0xb5, 0xf8, 0xee, 0x00, 0xac, 0xed, 0xa6, 0x3a, 0xc9,
	0xe6, 0x90, 0x49, 0x73, 0xd4, 0xde, 0x9d, 0x9e, 0x45, 0x89, 0x55, 0x5f, 0x13, 0x35, 0x3a, 0xee,
	0xf3, 0xdc, 0xf1, 0xf6, 0x55, 0x47, 0x44, 0xec, 0x1f, 0xf4, 0x1d, 0xbe, 0x86, 0x34, 0xde, 0x21,
	0xb3, 0x52, 0x8c, 0x41, 0x57, 0x2a, 0x7f, 0xe2, 0x5d, 0xa2, 0x54, 0xb3, 0x09, 0x74, 0xd4, 0xc1,
	0xf2, 0x1e, 0xa1, 0x58, 0x46, 0xb2, 0x17, 0x9e, 0xf7, 0x03, 0x69, 0x6f, 0x63, 0x49, 0x24, 0x84,
	0x0d, 0x2a, 0x12, 0x92, 0xc2, 0x0d, 0x85, 0x29, 0x85, 0xd2, 0x7c, 0x98, 0x6e, 0x48, 0x8a, 0x71,
	0x18, 0x7c, 0x29, 0xfb, 0x68, 0x0a, 0xe4, 0x23, 0x32, 0x6a, 0xc9, 0x66, 0x30, 0xf4, 0xaa, 0xc4,
	0x17, 0xa3, 0x91, 0x03, 0x59, 0x67, 0x1d, 0x3d, 0x8d, 0x7e, 0x67, 0x11, 0x0b, 0x9e, 0x25, 0xaf,
	0xd6, 0x31, 0x51, 0x15, 0x05, 0x25, 0xfe, 0x4e, 0x89, 0x95, 0x8c, 0xa7, 0x84, 0x43, 0x41, 0xd6,
	0x9f, 0x74, 0xaa, 0xd6, 0x71, 0x46, 0x9f, 0x28, 0xfc, 0x1b, 0x3a, 0x9a, 0xe2, 0x38, 0xcd, 0xa8,
	0x81, 0x1a, 0x1d, 0x14, 0xf0, 0xf7, 0xaa, 0x83, 0x32, 0xc2, 0x5f, 0x97, 0x52, 0xf2, 0x49, 0x9a,
	0x4c, 0x28, 0x89, 0x68, 0xc9, 0xa7, 0x15, 0xd1, 0x32, 0xa6, 0x94, 0x26, 0x57, 0x7b, 0x7c, 0x70,
	0x42, 0x17, 0x9c, 0xa5, 0x94, 0x06, 0x5a, 0x3d, 0x41, 0x56, 0xbf, 0xed, 0xee, 0xc3, 0xb1, 0x3b,
	0xc8, 0xd6, 0x76, 0x75, 0x7e, 0xed, 0x69, 0xda, 0x94, 0xe5, 0x65, 0x3f, 0x66, 0x35, 0xba, 0xec,
	0xc4, 0xe2, 0x57, 0xde, 0x27, 0x76, 0xfb, 0x13, 0x00, 0x00, 0xff, 0xff, 0x7f, 0xfc, 0xf5, 0xd3,
	0x62, 0x02, 0x00, 0x00,
}
